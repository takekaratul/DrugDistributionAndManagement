/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital;

import Business.DrugPackage.Drug;
import Business.EcoSystem;
import Business.EnterprisePackage.HospitalEnterprise;
import Business.EnterprisePackage.WarehouseEnterprise;
import Business.OrderPackage.Batch;
import Business.OrderPackage.Order;
import Business.OrderPackage.Packet;
import Business.UserAccountPackage.UserAccount;
import Business.WorkRequestPackage.FromDispenserWorkRequest;
import Business.WorkRequestPackage.FromInventoryWorkRequest;
import Business.WorkRequestPackage.ToDispenseWorkRequest;
import Business.WorkRequestPackage.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishabh
 */
public class DispenserViewAllOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DispenserViewAllOrderJPanel
     */
    JPanel userProcessContainer;
    HospitalEnterprise hospitalEnterprise;
    UserAccount account;
    EcoSystem ecoSystem;

    DispenserViewAllOrderJPanel(JPanel userProcessContainer, HospitalEnterprise hospitalEnterprise, UserAccount account, EcoSystem business) {
        initComponents();
        this.ecoSystem = business;
        this.account = account;
        this.userProcessContainer=userProcessContainer;
        this.hospitalEnterprise = hospitalEnterprise;
        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("MMM/dd/yyyy");
        String dateNow = formatter.format(currentDate.getTime());
        lblDate.setText(dateNow);

        Refresh();
    }
    public void Refresh() {
        int rowCount = tblOrdersPlaced.getRowCount();
        DefaultTableModel dtm=(DefaultTableModel)tblOrdersPlaced.getModel();
        for(int i=rowCount-1;i>=0;i--){
            
            dtm.removeRow(i);
        }
        int rowCount1 = tblOrdersReceived.getRowCount();
        DefaultTableModel dtm1=(DefaultTableModel)tblOrdersReceived.getModel();
        for(int i=rowCount1-1;i>=0;i--){
            
            dtm1.removeRow(i);
        }

        for (WorkRequest wr : hospitalEnterprise.getDispenserManagerOrganization().getWorkQueue().getWorkRequestQueue()) {

            if(wr instanceof FromDispenserWorkRequest)
            {
            Object row[] = new Object[7];
            row[0] = (FromDispenserWorkRequest) wr;
            row[1] = wr.getSender();
            row[2] = wr.getReceiver();
            row[3] = wr.getStatus();
            row[4] = (((FromDispenserWorkRequest) wr).getWareHouseEnterprise());
            row[5] = wr.getSendingDate();
            row[6] = wr.getReceivingDate();

            dtm.addRow(row);
            }
        }

        for (WorkRequest wr : (hospitalEnterprise.getDispenserManagerOrganization().getWorkQueue().getWorkRequestQueue())) {
            if(wr instanceof ToDispenseWorkRequest)
            {
            Object row[] = new Object[8];
            row[0] = (ToDispenseWorkRequest) wr;
            row[1] = ((ToDispenseWorkRequest) wr).getBatch();
            row[2] = wr.getSender();
            row[3] = wr.getReceiver();
            row[4] = wr.getStatus();
            row[5] = ((ToDispenseWorkRequest) wr).getWareHouseEnterprise();
            row[6] = wr.getSendingDate();
            row[7] = wr.getReceivingDate();

            dtm1.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrdersPlaced = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnPlaceOrder = new javax.swing.JButton();
        btnViewDetailsAPO = new javax.swing.JButton();
        btnAddToInventory = new javax.swing.JButton();
        btnViewDetailsOR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrdersReceived = new javax.swing.JTable();
        lblDate = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Order Received From WareHouse");

        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        tblOrdersPlaced.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "Sender", "Receiver", "Status", "WhereHouse Name", "SendingDate", "Receing Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrdersPlaced);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("All Orders Placed To WareHouse");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Dispenser Manager Work Area");

        btnPlaceOrder.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPlaceOrder.setText("Place An Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        btnViewDetailsAPO.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnViewDetailsAPO.setText("View Details");
        btnViewDetailsAPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsAPOActionPerformed(evt);
            }
        });

        btnAddToInventory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddToInventory.setText("Add To Inventory");
        btnAddToInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToInventoryActionPerformed(evt);
            }
        });

        btnViewDetailsOR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnViewDetailsOR.setText("View Details");
        btnViewDetailsOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsORActionPerformed(evt);
            }
        });

        tblOrdersReceived.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "Batch ID", "Sender", "Receiver", "Status", "WareHouse Name", "Sending Date", "Receing Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrdersReceived);

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 990, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(260, 260, 260)
                            .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(370, 370, 370)
                            .addComponent(btnPlaceOrder)
                            .addGap(15, 15, 15)
                            .addComponent(btnRefresh))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewDetailsAPO))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddToInventory)
                            .addGap(323, 323, 323)
                            .addComponent(btnViewDetailsOR)))
                    .addGap(0, 18, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 6, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel3))
                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(58, 58, 58)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(btnPlaceOrder)
                        .addComponent(btnRefresh))
                    .addGap(15, 15, 15)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(btnViewDetailsAPO)
                    .addGap(35, 35, 35)
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnAddToInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnViewDetailsOR))
                    .addGap(0, 7, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        Refresh();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed

        DispPlaceOrderToWareManagerJPanel dPOWMJPanel = new DispPlaceOrderToWareManagerJPanel(userProcessContainer, hospitalEnterprise, account, ecoSystem);
        userProcessContainer.add("Place Order To Warehouse Manager", dPOWMJPanel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnViewDetailsAPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsAPOActionPerformed

        int selectedRow = tblOrdersPlaced.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to view details");
            return;
        }

        WorkRequest workRequest = (WorkRequest) tblOrdersPlaced.getValueAt(selectedRow, 0);
        Order order = ((FromDispenserWorkRequest) workRequest).getOrder();
        OrderDetailsJPanel panel = new OrderDetailsJPanel(userProcessContainer, order);
        userProcessContainer.add("despneser order placed details", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewDetailsAPOActionPerformed

    private void btnAddToInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToInventoryActionPerformed

        int selectedRow = tblOrdersReceived.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select row to Add it to Inventory");
            return;
        }

        WorkRequest work1 = (WorkRequest) tblOrdersReceived.getValueAt(selectedRow, 0);

        if (((ToDispenseWorkRequest) work1).getStatus().equals(WorkRequest.Done)) {
            JOptionPane.showMessageDialog(null, "Already Added To Inventory");
            return;
        }

        work1.setStatus(WorkRequest.Done);
        work1.setReceiver(account);
        work1.setReceivingDate(lblDate.getText());

        for (WorkRequest workRequest : hospitalEnterprise.getDispenserManagerOrganization().getWorkQueue().getWorkRequestQueue()) {
            if(workRequest instanceof FromDispenserWorkRequest) {
            if (((FromDispenserWorkRequest) workRequest).getOrder().getOrderID().equals(((ToDispenseWorkRequest) work1).getOrder().getOrderID())) {
                workRequest.setStatus(WorkRequest.Done);
            }
            }
        }

        WarehouseEnterprise warehouseEnterprise = ((ToDispenseWorkRequest) work1).getWareHouseEnterprise();
        for (WorkRequest work2 : warehouseEnterprise.getInventoryManagerOrganization().getWorkQueue().getWorkRequestQueue()) {
            if(work2 instanceof FromInventoryWorkRequest) {
            if ((((FromInventoryWorkRequest) work2).getOrder().getOrderID()).equals(((ToDispenseWorkRequest) work1).getOrder().getOrderID())) {
                work2.setReceiver(account);
                work2.setStatus(WorkRequest.Done);
                work2.setReceivingDate(lblDate.getText());
            }
            }
        }

        for (Packet packet : ((ToDispenseWorkRequest) work1).getBatch().getPacketList()) {
            Drug drug = new Drug();

            drug.setDrugId(packet.getDrug().getDrugId());
            drug.setDrugName(packet.getDrug().getDrugName());
            drug.setExpiryDate(packet.getDrug().getExpiryDate());
            drug.setManufacturerName(packet.getDrug().getManufacturerName());
            drug.setNoOfUnits(packet.getDrug().getNoOfUnits());
            drug.setUnitPrice(packet.getDrug().getUnitPrice());

            hospitalEnterprise.getDrugDirectory().getDrugDirectory().add(drug);
        }

        Refresh();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddToInventoryActionPerformed

    private void btnViewDetailsORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsORActionPerformed

        int selectedRow = tblOrdersReceived.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to view details");
            return;
        }

        WorkRequest workRequest = (WorkRequest) tblOrdersReceived.getValueAt(selectedRow, 0);
        Order order = ((ToDispenseWorkRequest) workRequest).getOrder();
        Batch batch = ((ToDispenseWorkRequest) workRequest).getBatch();
        OrderBatchDetailsJPanel OBDJPanel = new OrderBatchDetailsJPanel(userProcessContainer, order, batch);
        userProcessContainer.add("Hospital Orders Received By Dispenser from Warehouse Details",OBDJPanel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewDetailsORActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToInventory;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnViewDetailsAPO;
    private javax.swing.JButton btnViewDetailsOR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JTable tblOrdersPlaced;
    private javax.swing.JTable tblOrdersReceived;
    // End of variables declaration//GEN-END:variables
}
