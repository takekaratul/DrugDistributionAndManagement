/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital;

import Business.ClinicalPackage.Patient;
import Business.ClinicalPackage.PatientDirectory;
import Business.ClinicalPackage.Treatment;
import Business.ClinicalPackage.TreatmentHistory;
import Business.DrugPackage.Drug;
import Business.EcoSystem;
import Business.EnterprisePackage.Enterprise;
import Business.EnterprisePackage.HospitalEnterprise;
import Business.EnterprisePackage.ManufacturerEnterprise;
import Business.NetworkPackage.Network;
import Business.OrganizationPackage.Organization;
import Business.UserAccountPackage.UserAccount;
import Business.WorkRequestPackage.ForClinicalFromManuToHosp;
import Business.WorkRequestPackage.ForTestingByManuToPreclinical;
import Business.WorkRequestPackage.SendReportToManuFromHosp;
import Business.WorkRequestPackage.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishabh
 */
public class DoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorJPanel
     */
    private PatientDirectory patientDirectory;
    private JPanel userProcessContainer;
    private TreatmentHistory treatmentHistory;
    private HospitalEnterprise hospitalEnterprise;
    private UserAccount userAccount;
    EcoSystem ecosystem;

    public DoctorJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, EcoSystem business) {
        initComponents();
        this.ecosystem = business;
        this.userProcessContainer=userProcessContainer;
        this.hospitalEnterprise=(HospitalEnterprise)enterprise;
        this.treatmentHistory=hospitalEnterprise.getDoctorOrganization().getTreatmentHistory();
        this.userAccount=userAccount;
        this.patientDirectory=hospitalEnterprise.getDoctorOrganization().getPatientDirectory();
        
        refresh();
        
        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("MMM/dd/yyyy");
        String dateNow = formatter.format(currentDate.getTime());
        lblDate.setText(dateNow);
    }

    public void refresh(){
        int rowCount=tblPatientlDirectory.getRowCount();
        DefaultTableModel dtm=(DefaultTableModel)tblPatientlDirectory.getModel();
        for(int i=rowCount-1;i>=0;i--){
            
            dtm.removeRow(i);
        }
        for(Patient patient:patientDirectory.getPatientDirectory()){
            Object row[] = new Object[6];
            row[0] = patient;
            row[1] = patient.getDateOfBirth();
            row[2]= patient.getDisease();
            row[3] = patient.getInfectedDate();
            row[4] = patient.getWeight();
            row[5] = patient.getHeight();
            
            
            dtm.addRow(row);
        }
        
        int rowCount1=tblPatientTreatmentHistory.getRowCount();
        DefaultTableModel dtm1=(DefaultTableModel)tblPatientTreatmentHistory.getModel();
        for(int i=rowCount1-1;i>=0;i--){
            
            dtm1.removeRow(i);
        }
        for(Treatment treatment:treatmentHistory.getTreatmentHistory()){
            Object row[] = new Object[5];
            row[0] = treatment;
            row[1] = treatment.getPatient().getName();
            row[2] = treatment.getResponse();
            row[3] = treatment.getDrug().getDrugName();
            row[4] = treatment.getDosage();
            
            
            dtm1.addRow(row);
        }
        
        cmbxDrugs.removeAllItems();
        for(Treatment t: treatmentHistory.getTreatmentHistory())
        {
            cmbxDrugs.addItem(t.getDrug());
        }
        
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientlDirectory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAddPatient = new javax.swing.JButton();
        btnRemovePatient = new javax.swing.JButton();
        btnTreat = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatientTreatmentHistory = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnTreatmentDetail = new javax.swing.JButton();
        btnDeleteTreatment = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        btnSendReport = new javax.swing.JButton();
        cmbxDrugs = new javax.swing.JComboBox();

        tblPatientlDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PatientName", "DOB", "Drug", "Infected date", "Weight", "Height"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientlDirectory);
        if (tblPatientlDirectory.getColumnModel().getColumnCount() > 0) {
            tblPatientlDirectory.getColumnModel().getColumn(0).setResizable(false);
            tblPatientlDirectory.getColumnModel().getColumn(1).setResizable(false);
            tblPatientlDirectory.getColumnModel().getColumn(2).setResizable(false);
            tblPatientlDirectory.getColumnModel().getColumn(3).setResizable(false);
            tblPatientlDirectory.getColumnModel().getColumn(4).setResizable(false);
            tblPatientlDirectory.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Doctor Area");

        btnAddPatient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddPatient.setText("Add Patient");
        btnAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPatientActionPerformed(evt);
            }
        });

        btnRemovePatient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRemovePatient.setText("Remove Patient");
        btnRemovePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePatientActionPerformed(evt);
            }
        });

        btnTreat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTreat.setText("Treat Patient");
        btnTreat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreatActionPerformed(evt);
            }
        });

        tblPatientTreatmentHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TreatmentID", "Animal Type", "Response", "Drug", "Side effects"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPatientTreatmentHistory);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Patient Directory");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Patient Treatment History");

        btnTreatmentDetail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTreatmentDetail.setText("View Details");
        btnTreatmentDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreatmentDetailActionPerformed(evt);
            }
        });

        btnDeleteTreatment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDeleteTreatment.setText("Remove");
        btnDeleteTreatment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTreatmentActionPerformed(evt);
            }
        });

        lblDate.setText("jLabel5");

        btnSendReport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSendReport.setText("Send Report");
        btnSendReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendReportActionPerformed(evt);
            }
        });

        cmbxDrugs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbxDrugs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxDrugsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTreatmentDetail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDeleteTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(158, 158, 158)
                                .addComponent(cmbxDrugs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSendReport))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(204, 204, 204)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDate)
                        .addGap(261, 261, 261))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181)
                        .addComponent(btnRemovePatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                        .addComponent(btnTreat, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblDate))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddPatient)
                    .addComponent(btnRemovePatient)
                    .addComponent(btnTreat))
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTreatmentDetail)
                    .addComponent(btnDeleteTreatment)
                    .addComponent(btnSendReport)
                    .addComponent(cmbxDrugs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(195, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPatientActionPerformed
        AddPatientJPanel addPatientJPanel=new AddPatientJPanel(userProcessContainer,hospitalEnterprise.getDoctorOrganization().getPatientDirectory());
        userProcessContainer.add("AddAnimalJPanel",addPatientJPanel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);// TODO add your handling code here:
    }//GEN-LAST:event_btnAddPatientActionPerformed

    private void btnRemovePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePatientActionPerformed
        int selectedRow= tblPatientlDirectory.getSelectedRow();
        if(selectedRow<0){

            JOptionPane.showMessageDialog(null,"Please Select any Row");
        }
        else{

            Patient patient=(Patient)tblPatientlDirectory.getValueAt(selectedRow, 1);
            patientDirectory.deletePatient(patient);
            refresh();
        } // TODO add your handling code here:
    }//GEN-LAST:event_btnRemovePatientActionPerformed

    private void btnTreatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreatActionPerformed

        int selectedRow= tblPatientlDirectory.getSelectedRow();
        if(selectedRow<0){
            
            JOptionPane.showMessageDialog(null,"Please Select any Row");
        }
        else{
            
        Patient patient=(Patient)tblPatientlDirectory.getValueAt(selectedRow, 0);
        TreatPatientJPanel treatPatientJPanel=new TreatPatientJPanel(userProcessContainer,patient,treatmentHistory,hospitalEnterprise);
        userProcessContainer.add("AddPatientJPanel",treatPatientJPanel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnTreatActionPerformed

    private void btnTreatmentDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreatmentDetailActionPerformed
        int selectedRow= tblPatientTreatmentHistory.getSelectedRow();
        if(selectedRow<0){

            JOptionPane.showMessageDialog(null,"Please Select any Row");
        }
        else{

            Treatment treatment=(Treatment)tblPatientTreatmentHistory.getValueAt(selectedRow, 0);
            TreatmentDetails treatmentDetails=new TreatmentDetails(userProcessContainer,treatment);
            userProcessContainer.add("TreatmentDetails",treatmentDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } // TODO add your handling code here:

        // TODO add your handling code here:
    }//GEN-LAST:event_btnTreatmentDetailActionPerformed

    private void btnDeleteTreatmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTreatmentActionPerformed
        int selectedRow= tblPatientTreatmentHistory.getSelectedRow();
        if(selectedRow<0){

            JOptionPane.showMessageDialog(null,"Please Select any Row");
        }
        else{

            Treatment treatment=(Treatment)tblPatientTreatmentHistory.getValueAt(selectedRow, 0);
            treatmentHistory.deleteTreatment(treatment);
            refresh();
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteTreatmentActionPerformed

    private void btnSendReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendReportActionPerformed
//        // TODO add your handling code here:
       TreatmentHistory sendTreatmentHistory= new TreatmentHistory();
        Drug d=(Drug)cmbxDrugs.getSelectedItem();
        d.setIsApprovedByHospital(true);
        
        for(Treatment t: treatmentHistory.getTreatmentHistory())
        {
            if(d.equals(t.getDrug()))
            {
                sendTreatmentHistory.addExistingTreatment(t);
            }
        }
        
        SendReportToManuFromHosp wr = new SendReportToManuFromHosp();
        wr.setTreatmentHistory(sendTreatmentHistory);
        wr.setSender(userAccount);
        wr.setSendingDate(lblDate.getText());
        wr.setStatus(WorkRequest.Sent);
        Network network = null;
        //EcoSystem ecosystem=EcoSystem.getInstance();
        for(Network n: ecosystem.getNetworkList())
            {
                for(Enterprise e:n.getEnterprisedirectory().getEnterpriseDirectory())
                {
                    if(e.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital))
                    {
                        if(hospitalEnterprise.equals((HospitalEnterprise)e))
                        {
                            network=n;
                        }
                        
                    }
                }
            }
            
        for(Enterprise e: network.getEnterprisedirectory().getEnterpriseDirectory())
            {
                if(e.getEnterpriseType().equals(Enterprise.EnterpriseType.Manufacturer))
                {
                    ManufacturerEnterprise manufacturerEnterprise=(ManufacturerEnterprise)e;
                    manufacturerEnterprise.getDrugManagerOrganization().getWorkQueue().getWorkRequestQueue().add(wr);
                }
            }
    }//GEN-LAST:event_btnSendReportActionPerformed

    private void cmbxDrugsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxDrugsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbxDrugsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPatient;
    private javax.swing.JButton btnDeleteTreatment;
    private javax.swing.JButton btnRemovePatient;
    private javax.swing.JButton btnSendReport;
    private javax.swing.JButton btnTreat;
    private javax.swing.JButton btnTreatmentDetail;
    private javax.swing.JComboBox cmbxDrugs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JTable tblPatientTreatmentHistory;
    private javax.swing.JTable tblPatientlDirectory;
    // End of variables declaration//GEN-END:variables
}
