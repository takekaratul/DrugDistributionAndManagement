/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Warehouse;

import Business.OrderPackage.Batch;
import Business.DrugPackage.Drug;
import Business.EnterprisePackage.HospitalEnterprise;
import Business.OrderPackage.OrderItem;
import Business.OrderPackage.Packet;
import Business.UserAccountPackage.UserAccount;
import Business.EnterprisePackage.WarehouseEnterprise;
import Business.WorkRequestPackage.FromInventoryWorkRequest;
import Business.WorkRequestPackage.ToDispenseWorkRequest;
import Business.WorkRequestPackage.ToWareHouseWorkRequest;
import Business.WorkRequestPackage.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atul
 */
public class ReplyOrderToDispenserJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount userAccount;
    WarehouseEnterprise wareHouseEnterprise;
    WorkRequest workRequest;
    Batch batch;

    /**
     * Creates new form ReplyOrderToInventoryJPanel
     */
    public ReplyOrderToDispenserJPanel(JPanel j, WarehouseEnterprise wh, UserAccount u, WorkRequest w) {
        initComponents();
        userProcessContainer = j;
        wareHouseEnterprise = wh;
        userAccount = u;
        workRequest = w;

        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("MMM/dd/yyyy");
        String dateNow = formatter.format(currentDate.getTime());
        lblDate.setText(dateNow);

        batch = new Batch();

        lblName.setText("Process Order ID : " + ((ToWareHouseWorkRequest) workRequest).getOrder().getOrderID());
        lblBatch.setText("Batch ID :" + batch.getBatchID());

        int rowCount = OrderItemRequiredJTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) OrderItemRequiredJTable.getModel()).removeRow(i);
        }

        for (OrderItem orderItem : ((ToWareHouseWorkRequest) workRequest).getOrder().getOrderItemList()) {
            Object row[] = new Object[2];
            row[0] = orderItem;
            row[1] = orderItem.getQuantity();

            ((DefaultTableModel) OrderItemRequiredJTable.getModel()).addRow(row);
        }

        int rowCount1 = myCartJTable.getRowCount();

        for (int i = rowCount1 - 1; i >= 0; i--) {
            ((DefaultTableModel) myCartJTable.getModel()).removeRow(i);
        }

        int rowConut2 = DrugDirectoryJTable.getRowCount();
        for (int i = rowConut2 - 1; i >= 0; i--) {
            ((DefaultTableModel) DrugDirectoryJTable.getModel()).removeRow(i);
        }
        RefreshDrugDirectory();
        RefreshMyCart();
    }

    public void RefreshDrugDirectory() {
        int rowConut = DrugDirectoryJTable.getRowCount();
        for (int i = rowConut - 1; i >= 0; i--) {
            ((DefaultTableModel) DrugDirectoryJTable.getModel()).removeRow(i);
        }

        for (Drug drug : wareHouseEnterprise.getDrugDirectory().getDrugDirectory()) {
            Object row[] = new Object[5];
            row[0] = drug;
            row[1] = drug.getExpiryDate();
            row[2] = drug.getManufacturerName();
            row[3] = drug.getNoOfUnits();
            row[4] = drug.getUnitPrice();

            ((DefaultTableModel) DrugDirectoryJTable.getModel()).addRow(row);
        }
    }

    public void RefreshMyCart() {
        int rowConut = myCartJTable.getRowCount();
        for (int i = rowConut - 1; i >= 0; i--) {
            ((DefaultTableModel) myCartJTable.getModel()).removeRow(i);
        }

        for (Packet packet : batch.getPacketList()) {
            Object row[] = new Object[4];
            row[0] = packet;
            row[1] = packet.getDrug().getDrugName();
            row[2] = packet.getDrug().getNoOfUnits();
            row[3] = packet.getPacketPrice();

            ((DefaultTableModel) myCartJTable.getModel()).addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBatch = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderItemRequiredJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        myCartJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DrugDirectoryJTable = new javax.swing.JTable();
        sprQuantity = new javax.swing.JSpinner();
        btnAddtoCart = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        btnSubmitOrder = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBatch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(lblBatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 80, 120, 20));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 67, 1000, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Order Items Required");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        OrderItemRequiredJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drug Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OrderItemRequiredJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 160, 290));

        myCartJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Packate ID", "Drug Name", "Quantity", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(myCartJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, 260, 290));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Quantity:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Drug Directory");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 160, -1));

        DrugDirectoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Drug Name", "ExpiryDate", "Manufacturer Name", "Number Of Units", "Price Of Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(DrugDirectoryJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 540, 167));
        add(sprQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 290, 60, -1));

        btnAddtoCart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddtoCart.setText("Add To Cart");
        btnAddtoCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddtoCartActionPerformed(evt);
            }
        });
        add(btnAddtoCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, -1, -1));

        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 410, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("My Cart");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 80, -1, -1));

        lblName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 220, 30));

        btnSubmitOrder.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitOrderActionPerformed(evt);
            }
        });
        add(btnSubmitOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 460, -1, -1));

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, 110, 20));

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddtoCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoCartActionPerformed

        int selectedRow = DrugDirectoryJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to Add it to cart");
            return;
        }

        Drug drug = (Drug) DrugDirectoryJTable.getValueAt(selectedRow, 0);

        for (Packet packet : batch.getPacketList()) {
            if (packet.getDrug().getDrugName().equals(drug.getDrugName())) {
                JOptionPane.showMessageDialog(null, "Drug " + drug.getDrugName() + " Already Chosen");
                return;
            }
        }

        int quantity = 0;
        try {
            String s = sprQuantity.getValue() + "";
            quantity = Integer.parseInt(s);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Quantity must be an interger");
            return;
        }

        int c = 0;
        for (OrderItem orderItem : ((ToWareHouseWorkRequest) workRequest).getOrder().getOrderItemList()) {
            if (orderItem.getDrugName().equals(drug.getDrugName())) {
                c = 1;
            }
        }
        if (c == 0) {
            JOptionPane.showMessageDialog(null, "Selected Drug Do not match Required OrderItem");
            return;
        } else {
            for (OrderItem orderItem : ((ToWareHouseWorkRequest) workRequest).getOrder().getOrderItemList()) {
                if (orderItem.getDrugName().equals(drug.getDrugName())) {
                    if (!(orderItem.getQuantity() == quantity)) {
                        JOptionPane.showMessageDialog(null, "Quantity selected and Required do not match for " + drug.getDrugName());
                        return;
                    }
                    break;
                }
            }
        }

        Drug newDrug = new Drug();
        newDrug.setDrugName(drug.getDrugName());
        newDrug.setExpiryDate(drug.getExpiryDate());
        newDrug.setManufacturerName(drug.getManufacturerName());
        newDrug.setNoOfUnits(quantity);
        newDrug.setUnitPrice(drug.getUnitPrice());

        Packet packet = batch.newPacket();
        packet.setDrug(newDrug);
        packet.setPacketPrice(newDrug.getUnitPrice() * newDrug.getNoOfUnits());

        drug.setNoOfUnits(drug.getNoOfUnits()- quantity);

        RefreshDrugDirectory();
        RefreshMyCart();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddtoCartActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        int selectedRow = myCartJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to Remove Drug from MyCart");
            return;
        }

        Packet packet = (Packet) myCartJTable.getValueAt(selectedRow, 0);

        for (Drug drug : wareHouseEnterprise.getDrugDirectory().getDrugDirectory()) {
            if (drug.getDrugName().equals(packet.getDrug().getDrugName())) {
                drug.setNoOfUnits(drug.getNoOfUnits()+ packet.getDrug().getNoOfUnits());
            }
        }

        batch.removePacket(packet);

        RefreshDrugDirectory();
        RefreshMyCart();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitOrderActionPerformed

        if (batch.getPacketList().size() == 0) {
            JOptionPane.showMessageDialog(null, "Nothing In Cart");
            return;
        }

        if (!(batch.getPacketList().size() == ((ToWareHouseWorkRequest) workRequest).getOrder().getOrderItemList().size())) {
            JOptionPane.showMessageDialog(null, "Entire Order Not Placed, Press Back to Cancel order");
            return;
        }

        int total = 0;
        for (Packet packet : batch.getPacketList()) {
            total += packet.getPacketPrice();
        }

        batch.setBatchPrice(total);

        ToDispenseWorkRequest wr = new ToDispenseWorkRequest();
        wr.setOrder(((ToWareHouseWorkRequest) workRequest).getOrder());
        wr.setSender(userAccount);
        wr.setStatus(WorkRequest.UnderPro);
        wr.setWareHouseEnterprise(wareHouseEnterprise);
        wr.setSendingDate(lblDate.getText());
        wr.setBatch(batch);

        HospitalEnterprise hospitalEnterprise = ((ToWareHouseWorkRequest) workRequest).getHospitalEnterprise();

        hospitalEnterprise.getDispenserManagerOrganization().getWorkQueue().getWorkRequestQueue().add(wr);

        FromInventoryWorkRequest wr1 = new FromInventoryWorkRequest();
        wr1.setOrder(((ToWareHouseWorkRequest) workRequest).getOrder());
        wr1.setSender(userAccount);
        wr1.setStatus(WorkRequest.UnderPro);
        wr1.setHospitalEnterprise(((ToWareHouseWorkRequest) workRequest).getHospitalEnterprise());
        wr1.setSendingDate(lblDate.getText());
        wr1.setBatch(batch);

        wareHouseEnterprise.getInventoryManagerOrganization().getWorkQueue().getWorkRequestQueue().add(wr1);
        JOptionPane.showMessageDialog(null, "Batch (Parcel) " + batch.getBatchID() + " Placed Successfully");

        InventoryManagerJPanel panel = new InventoryManagerJPanel(userProcessContainer, wareHouseEnterprise, userAccount);
        userProcessContainer.add("back to inventory manager", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:

        if (myCartJTable.getRowCount() != 0) {
            JOptionPane.showMessageDialog(null, "Emepty cart before leaving PLEASE");
            return;
        }

        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DrugDirectoryJTable;
    private javax.swing.JTable OrderItemRequiredJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAddtoCart;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBatch;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblName;
    private javax.swing.JTable myCartJTable;
    private javax.swing.JSpinner sprQuantity;
    // End of variables declaration//GEN-END:variables
}
