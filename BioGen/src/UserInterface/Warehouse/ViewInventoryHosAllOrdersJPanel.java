/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Warehouse;

import Business.OrderPackage.Batch;
import Business.EnterprisePackage.HospitalEnterprise;
import Business.OrderPackage.Order;
import Business.UserAccountPackage.UserAccount;
import Business.EnterprisePackage.WarehouseEnterprise;
import Business.WorkRequestPackage.FromDispenserWorkRequest;
import Business.WorkRequestPackage.FromInventoryWorkRequest;
import Business.WorkRequestPackage.ToWareHouseWorkRequest;
import Business.WorkRequestPackage.WorkRequest;
import UserInterface.Hospital.OrderBatchDetailsJPanel;
import UserInterface.Hospital.OrderDetailsJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishabh
 */
public class ViewInventoryHosAllOrdersJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount userAccount;
    WarehouseEnterprise warehouseEnterprise;

    /**
     * Creates new form ViewWareHouseAllOrdersJPanel
     */
    public ViewInventoryHosAllOrdersJPanel(JPanel userProcessContainer, WarehouseEnterprise warehouseEnterprise, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.warehouseEnterprise = warehouseEnterprise;
        this.userAccount = userAccount;

        Calendar currentDate = Calendar.getInstance();
        SimpleDateFormat formatter = new SimpleDateFormat("MMM/dd/yyyy");
        String dateNow = formatter.format(currentDate.getTime());
        lblDate.setText(dateNow);

        Refresh();
    }

    public void Refresh() {

        int rowCount = ordersReceivedJTable.getRowCount();
        DefaultTableModel dtm=(DefaultTableModel)ordersReceivedJTable.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }

        int rowCount1 = ordersPlacedJTable.getRowCount();
        DefaultTableModel dtm1=(DefaultTableModel)ordersPlacedJTable.getModel();
        for (int i = rowCount1 - 1; i >= 0; i--) {
            dtm1.removeRow(i);
        }

        for (WorkRequest wr : warehouseEnterprise.getInventoryManagerOrganization().getWorkQueue().getWorkRequestQueue()) {

            if(wr instanceof FromInventoryWorkRequest)
            {
            Object row[] = new Object[8];
            row[0] = ((FromInventoryWorkRequest) wr);
            row[1] = ((FromInventoryWorkRequest) wr).getBatch();
            row[2] = wr.getSender();
            row[3] = wr.getReceiver();
            row[4] = wr.getStatus();
            row[5] = (((FromInventoryWorkRequest) wr).getHospitalEnterprise());
            row[6] = wr.getSendingDate();
            row[7] = wr.getReceivingDate();

            ((DefaultTableModel) ordersPlacedJTable.getModel()).addRow(row);
            }
        }

        for (WorkRequest wr : warehouseEnterprise.getWarehouseManagerOrganization().getWorkQueue().getWorkRequestQueue()) {
            if(wr instanceof ToWareHouseWorkRequest)
            {
            Object row[] = new Object[7];
            row[0] = (ToWareHouseWorkRequest) wr;
            row[1] = wr.getSender();
            row[2] = wr.getReceiver();
            row[3] = wr.getStatus();
            row[4] = ((ToWareHouseWorkRequest) wr).getHospitalEnterprise();
            row[5] = wr.getSendingDate();
            row[6] = wr.getReceivingDate();

            ((DefaultTableModel) ordersReceivedJTable.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnAssignToMe = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersReceivedJTable = new javax.swing.JTable();
        lblDate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnViewDetailsOR = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ordersPlacedJTable = new javax.swing.JTable();
        btnViewDetailsAPO = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Order Received From Hospitals");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 320, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1000, 10));

        btnAssignToMe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAssignToMe.setText("Assign To Me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });
        add(btnAssignToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 490, -1, -1));

        ordersReceivedJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "Sender", "Receiver", "Status", "Hospital Name", "Sending Date", "Receiving Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ordersReceivedJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 960, 170));

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, 110, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Inventory Manager workarea");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 320, -1));

        btnViewDetailsOR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnViewDetailsOR.setText("View Details");
        btnViewDetailsOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsORActionPerformed(evt);
            }
        });
        add(btnViewDetailsOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 490, -1, -1));

        btnProcess.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 490, -1, 30));

        ordersPlacedJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "OrderID", "Batch ID", "Sender", "Receiver", "Status", "Hospital Name", "SendingDate", "Receiving Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ordersPlacedJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 970, 110));

        btnViewDetailsAPO.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnViewDetailsAPO.setText("View Details");
        btnViewDetailsAPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsAPOActionPerformed(evt);
            }
        });
        add(btnViewDetailsAPO, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 240, -1, -1));

        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("All Orders Placed To Hospitals");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 330, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed

        int selectedRow = ordersReceivedJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select row");
            return;
        }

        WorkRequest wr1 = (WorkRequest) ordersReceivedJTable.getValueAt(selectedRow, 0);

        if (((ToWareHouseWorkRequest) wr1).getStatus().equals(WorkRequest.Recieve) || ((ToWareHouseWorkRequest) wr1).getStatus().equals(WorkRequest.Done)) {
            JOptionPane.showMessageDialog(null, "Already Assigned");
            return;
        }

        wr1.setStatus(WorkRequest.Recieve);
        wr1.setReceiver(userAccount);
        wr1.setReceivingDate(lblDate.getText());

        HospitalEnterprise hospitalEnterprise = ((ToWareHouseWorkRequest) wr1).getHospitalEnterprise();
        for (WorkRequest wr : hospitalEnterprise.getDispenserManagerOrganization().getWorkQueue().getWorkRequestQueue()) {
            if ((((FromDispenserWorkRequest) wr).getOrder().getOrderID()).equals(((ToWareHouseWorkRequest) wr1).getOrder().getOrderID())) {
                wr.setReceiver(userAccount);
                wr.setStatus(WorkRequest.Sent);
                wr.setReceivingDate(lblDate.getText());
            }
        }


        Refresh();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnViewDetailsORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsORActionPerformed

        int selectedRow = ordersReceivedJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to view details");
            return;
        }

        WorkRequest workRequest = (WorkRequest) ordersReceivedJTable.getValueAt(selectedRow, 0);
        Order order = ((ToWareHouseWorkRequest) workRequest).getOrder();
        OrderDetailsJPanel panel = new OrderDetailsJPanel(userProcessContainer, order);
        userProcessContainer.add("ware house Orders Received details", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewDetailsORActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed

        int selectedRow = ordersReceivedJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to Process");
            return;
        }

        WorkRequest workRequest = (WorkRequest) ordersReceivedJTable.getValueAt(selectedRow, 0);
        for (WorkRequest wr : warehouseEnterprise.getInventoryManagerOrganization().getWorkQueue().getWorkRequestQueue()) {
            if(wr instanceof FromInventoryWorkRequest ){
            if (((FromInventoryWorkRequest) wr).getOrder().getOrderID().equals(((ToWareHouseWorkRequest) workRequest).getOrder().getOrderID())) {
                JOptionPane.showMessageDialog(null, "Order Already Processed ");
                return;
            }}
        }

        if (!(workRequest.getStatus().equals(WorkRequest.Recieve))) {
            JOptionPane.showMessageDialog(null, "Assign To Yourself Before Processing");
            return;
        }

        if ((workRequest.getStatus().equals(WorkRequest.Done))) {
            JOptionPane.showMessageDialog(null, "Work is Already Done");
            return;
        }

        ReplyOrderToDispenserJPanel panel = new ReplyOrderToDispenserJPanel(userProcessContainer, warehouseEnterprise, userAccount, workRequest);
        userProcessContainer.add("place order to dispenser", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnViewDetailsAPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsAPOActionPerformed

        int selectedRow = ordersPlacedJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select Row to view details");
            return;
        }

        WorkRequest workRequest = (WorkRequest) ordersPlacedJTable.getValueAt(selectedRow, 0);
        Order order = ((FromInventoryWorkRequest) workRequest).getOrder();
        Batch batch = ((FromInventoryWorkRequest) workRequest).getBatch();
        OrderBatchDetailsJPanel panel = new OrderBatchDetailsJPanel(userProcessContainer, order, batch);
        userProcessContainer.add("inventory Orders placed details", panel);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewDetailsAPOActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        Refresh();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnViewDetailsAPO;
    private javax.swing.JButton btnViewDetailsOR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JTable ordersPlacedJTable;
    private javax.swing.JTable ordersReceivedJTable;
    // End of variables declaration//GEN-END:variables
}
