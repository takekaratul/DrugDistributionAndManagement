
package UserInterfaceMain;

import Business.EcoSystem;
import Business.ConfigureEcoSystem;
import Business.EnterprisePackage.Enterprise;
import Business.EnterprisePackage.FDAEnterprise;
import Business.EnterprisePackage.HospitalEnterprise;
import Business.EnterprisePackage.LicenseEnterprise;
import Business.EnterprisePackage.ManufacturerEnterprise;
import Business.EnterprisePackage.WarehouseEnterprise;
import Business.NetworkPackage.Network;
import Business.OrganizationPackage.Organization;
import Business.UserAccountPackage.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import DB4O.DB4OUtil;


/**
 *
 * @author Atul
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    public MainJFrame() {
        initComponents();
        system = dB4OUtil.retrieveSystem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        loginJButton = new javax.swing.JButton();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginJLabel = new javax.swing.JLabel();
        logoutJButton = new javax.swing.JButton();
        container = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginJButton.setText("Login");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("User Name");

        jLabel2.setText("Password");

        logoutJButton.setText("Logout");
        logoutJButton.setEnabled(false);
        logoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(logoutJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addGap(26, 26, 26)
                            .addComponent(loginJLabel)))
                    .addComponent(loginJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginJButton)
                .addGap(34, 34, 34)
                .addComponent(logoutJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginJLabel)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        container.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(container);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed


        
        UserAccount foundUser=null;
        HospitalEnterprise hospitalEnterprise;
        ManufacturerEnterprise manufacturerEnterprise;
        WarehouseEnterprise wareHouseEnterprise;
        FDAEnterprise fDAEnterprise;
        LicenseEnterprise licensingEnterprise;
        Enterprise inEnterprise = null;
        Organization inOrganization = null;

        
        boolean flag = true;
        one:
        while (true) {
            for (UserAccount ua : system.getUserAccountDirectory().getUserAccountList()) 
            {
                if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) 
                {
                    foundUser=ua;
                    break one;
                }
            }

            for(Network network : system.getNetworkList())
            {
            for (Enterprise e : network.getEnterprisedirectory().getEnterpriseDirectory()) {

                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Manufacturer)) {
                    manufacturerEnterprise = (ManufacturerEnterprise) e;

                    for (UserAccount ua : manufacturerEnterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            break one;
                        }
                    }

                    for (UserAccount ua : manufacturerEnterprise.getDrugManagerOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=manufacturerEnterprise.getDrugManagerOrganization();
                            break one;
                        }
                    }
                    for (UserAccount ua : manufacturerEnterprise.getSalesManagerOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=manufacturerEnterprise.getSalesManagerOrganization();
                            break one;
                        }
                    }
                    
                    for (UserAccount ua : manufacturerEnterprise.getPreClinicalTesterOrgnization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=manufacturerEnterprise.getPreClinicalTesterOrgnization();
                            break one;
                        }
                    }
                }

            }
            for (Enterprise e : network.getEnterprisedirectory().getEnterpriseDirectory()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Warehouse)) {
                    wareHouseEnterprise = (WarehouseEnterprise) e;

                    for (UserAccount ua : wareHouseEnterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            break one;
                        }
                    }
                    for (UserAccount ua : wareHouseEnterprise.getWarehouseManagerOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=wareHouseEnterprise.getWarehouseManagerOrganization();
                            break one;
                        }
                    }
                    for (UserAccount ua : wareHouseEnterprise.getInventoryManagerOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=wareHouseEnterprise.getInventoryManagerOrganization();
                            break one;
                        }
                    }
                }
            }
            for (Enterprise e : network.getEnterprisedirectory().getEnterpriseDirectory()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital)) {
                    hospitalEnterprise = (HospitalEnterprise) e;

                    for (UserAccount ua : hospitalEnterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            break one;
                        }
                    }
                    for (UserAccount ua : hospitalEnterprise.getDispenserManagerOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=hospitalEnterprise.getDispenserManagerOrganization();
                            break one;
                        }
                    }
                    for (UserAccount ua : hospitalEnterprise.getDoctorOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=hospitalEnterprise.getDoctorOrganization();
                            break one;
                        }
                    }
                }
            }
            for (Enterprise e : network.getEnterprisedirectory().getEnterpriseDirectory()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.FDA)) {
                    fDAEnterprise = (FDAEnterprise) e;

                    for (UserAccount ua : fDAEnterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            break one;
                        }
                    }
                    for (UserAccount ua : fDAEnterprise.getFdaOrganization().getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            inOrganization=fDAEnterprise.getFdaOrganization();
                            break one;
                        }
                    }
                }
            }
            for (Enterprise e : network.getEnterprisedirectory().getEnterpriseDirectory()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.License)) {
                    licensingEnterprise = (LicenseEnterprise) e;

                    for (UserAccount ua : licensingEnterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equals(txtUserName.getText()) && ua.getPassword().equals(txtPassword.getText())) {
                            foundUser=ua;
                            inEnterprise=e;
                            break one;
                        }
                    }
                }
            }
            break one;
            }
            break one;
        }
      if(foundUser== null)
        {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        }
        else
        {
            logoutJButton.setEnabled(true);
            loginJButton.setEnabled(false);
            CardLayout layout =(CardLayout)container.getLayout();
            container.add("workarea",foundUser.getRole().createWorkArea(container, foundUser, inOrganization, inEnterprise, system));
            layout.next(container);
        }
    }//GEN-LAST:event_loginJButtonActionPerformed

    private void logoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJButtonActionPerformed
        logoutJButton.setEnabled(false);
        loginJButton.setEnabled(true);
        txtUserName.setEnabled(true);
        txtPassword.setEnabled(true);
        loginJButton.setEnabled(true);

        txtUserName.setText("");
        txtPassword.setText("");

        container.removeAll();
        JPanel blankJP = new JPanel();
        container.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_logoutJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel container;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton loginJButton;
    private javax.swing.JLabel loginJLabel;
    private javax.swing.JButton logoutJButton;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
